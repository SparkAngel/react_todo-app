{"version":3,"sources":["Todo.js","TodoApp.js","FilterBy.js","getSortFied.js","App.js","index.js"],"names":["Todo","_ref","item","toggle","deleteTodo","id","title","completed","react_default","a","createElement","className","type","onChange","checked","htmlFor","onClick","defaultProps","TodoApp","state","handleSubmit","event","preventDefault","onSubmit","_this","props","setState","handleChange","_event$target","target","name","value","Object","defineProperty","this","placeholder","Fragment","React","Component","FilterBy","handleFilterBy","href","getSortFied","todos","sortField","callBack","active","filter","App","todosVisible","isCompletedHide","statusAllTodo","addTodo","prevState","concat","toConsumableArray","Date","now","handleToggle","task","find","todo","handleChackAll","map","objectSpread","todosDelet","deleteAllComplete","todosActive","_this2","src_TodoApp","src_Todo","key","style","display","length","src_FilterBy","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.96996c9e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Todo = ({ item, toggle, deleteTodo }) => {\n  const { id, title, completed } = item;\n\n  return (\n    <li className=\"todo\">\n      <div className=\"view\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle\"\n          id={id}\n          onChange={() => toggle(id)}\n          checked={completed}\n        />\n        {/* eslint-disable-next-line */}\n        <label htmlFor=\"todo\">{title}</label>\n        <button\n          type=\"button\"\n          className=\"destroy\"\n          onClick={() => deleteTodo(id)}\n        />\n        <p>{completed}</p>\n      </div>\n    </li>\n  );\n};\n\nTodo.propTypes = {\n  item: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n    id: PropTypes.number,\n  }).isRequired,\n  toggle: PropTypes.func,\n  deleteTodo: PropTypes.func.isRequired,\n};\n\nTodo.defaultProps = {\n  toggle: null,\n};\n\nexport default Todo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoApp extends React.Component {\n  state = {\n    title: '',\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { onSubmit } = this.props;\n\n    onSubmit(this.state.title);\n    this.setState({\n      title: '',\n    });\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label\n          className=\"new-todo\"\n          htmlFor=\"new-todo-title\"\n        >\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            onChange={this.handleChange}\n            value={this.state.title}\n            name=\"title\"\n            type=\"text\"\n          />\n        </label>\n        <button type=\"submit\">\n          <></>\n        </button>\n      </form>\n    );\n  }\n}\n\nTodoApp.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default TodoApp;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst FilterBy = ({ handleFilterBy }) => (\n  <>\n    <li>\n      <a\n        onClick={() => handleFilterBy('active')}\n        href=\"#/\"\n        className=\"selected\"\n      >\n    Active\n      </a>\n    </li>\n    <li>\n      <a\n        href=\"#/active\"\n        onClick={() => handleFilterBy('all')}\n      >\n      All\n      </a>\n    </li>\n    <li>\n      <a\n        href=\"#/completed\"\n        onClick={() => handleFilterBy('completed')}\n      >\n    Completed\n      </a>\n    </li>\n  </>\n);\n\nFilterBy.propTypes = {\n  handleFilterBy: PropTypes.func.isRequired,\n};\n\nexport default FilterBy;\n","const getSortFied = (todos, sortField) => {\n  if (sortField === 'all') {\n    return todos;\n  }\n\n  const callBackSort = {\n    active: a => !a.completed,\n    completed: a => a.completed,\n  };\n  const callBack = callBackSort[sortField];\n\n  return todos.filter(callBack);\n};\n\nexport default getSortFied;\n","import React from 'react';\nimport Todo from './Todo';\nimport TodoApp from './TodoApp';\nimport FilterBy from './FilterBy';\nimport getSortFied from './getSortFied';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    sortField: 'all',\n    todosVisible: [],\n    isCompletedHide: 0,\n    statusAllTodo: true,\n  }\n\naddTodo = (title) => {\n  this.setState(prevState => ({\n    todos: [...prevState.todos,\n      {\n        title,\n        id: Date.now(),\n        completed: false,\n      },\n    ],\n    todosVisible: [...prevState.todosVisible, {\n      title,\n      id: Date.now(),\n      completed: false,\n    }],\n    completed: prevState.completed,\n  }));\n};\n\nhandleFilterBy = (sortField) => {\n  this.setState(prevState => ({\n    todosVisible: getSortFied(prevState.todos, sortField),\n    sortField: prevState.sortField,\n  }));\n}\n\nhandleToggle = (id) => {\n  this.setState((prevState) => {\n    const task = prevState.todosVisible.find(todo => todo.id === id);\n\n    task.completed = !task.completed;\n    if (task.completed) {\n      return {\n        isCompletedHide: 1,\n      };\n    }\n\n    return {\n      todosVisible: prevState.todosVisible,\n    };\n  });\n}\n\nhandleChackAll = () => {\n  this.setState(prevState => ({\n    todosVisible: prevState.todos.map(todo => ({\n      ...todo,\n      completed: prevState.statusAllTodo,\n    }\n    )),\n    statusAllTodo: !prevState.statusAllTodo,\n  }));\n}\n\ndeleteTodo = (id) => {\n  this.setState((prevState) => {\n    const todosDelet = prevState.todos.filter(todo => !(todo.id === id));\n\n    return {\n      todos: todosDelet,\n      todosVisible: getSortFied(todosDelet, 'all'),\n    };\n  });\n}\n\ndeleteAllComplete = () => {\n  this.setState((prevState) => {\n    const todosActive = prevState.todosVisible.filter(a => !a.completed);\n\n    return {\n      todos: todosActive,\n      todosVisible: getSortFied(todosActive, 'all'),\n    };\n  });\n}\n\nrender() {\n  const { todosVisible } = this.state;\n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n        <TodoApp\n          onSubmit={this.addTodo}\n        />\n      </header>\n      <section className=\"main\">\n        <input\n          type=\"checkbox\"\n          className=\"toggle-all\"\n          id=\"toggle-all\"\n          onChange={this.handleChackAll}\n        />\n        {/* eslint-disable-next-line */}\n        <label htmlFor=\"toggle-all\">Mark all as completed</label>\n        <ul className=\"todo-list\">\n          {todosVisible.map(todo => (\n            <Todo\n              key={todo.id}\n              item={todo}\n              toggle={this.handleToggle}\n              deleteTodo={this.deleteTodo}\n            />\n          ))}\n        </ul>\n      </section>\n      <footer className=\"footer\" style={{ display: 'block' }}>\n        <span className=\"todo-count\">\n          {`${todosVisible.filter(todo => !todo.completed).length}\n            items left`}\n        </span>\n\n        <ul className=\"filters\">\n          <FilterBy\n            handleFilterBy={this.handleFilterBy}\n          />\n        </ul>\n        <button\n          type=\"button\"\n          className=\"clear-completed\"\n          onClick={this.deleteAllComplete}\n        >\n          {this.state.isCompletedHide ? 'Clear completed' : ''}\n        </button>\n      </footer>\n    </section>\n  );\n}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}