{"version":3,"sources":["Todo.js","TodoApp.js","FilterBy.js","App.js","index.js"],"names":["Todo","_ref","todo","handleToggle","deleteTodo","react_default","a","createElement","className","type","id","checked","completed","onChange","htmlFor","title","onClick","TodoApp","state","currentTodoValue","event","value","target","_this","setState","addTodo","preventDefault","length","props","Object","objectSpread","Date","now","_this$props","this","todos","handleCheckAll","statusAllTodo","onSubmit","placeholder","map","src_Todo","key","React","Component","FilterBy","sortFieldTodo","sortField","clearCompleted","style","display","filter","href","App","todosFiltered","prevState","concat","toConsumableArray","prevstate","every","_this$state","visibleTodos","src_TodoApp","src_FilterBy","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f3418509.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Todo = ({\n  todo, handleToggle, deleteTodo,\n}) => (\n  <li>\n    <div className=\"view\">\n      <input\n        type=\"checkbox\"\n        className=\"toggle\"\n        id={todo.id}\n        checked={todo.completed}\n        onChange={() => handleToggle(todo.id)}\n      />\n      {/* eslint-disable-next-line */}\n      <label htmlFor={todo.id}>\n        {todo.title}\n      </label>\n      <button\n        type=\"button\"\n        className=\"destroy\"\n        onClick={() => deleteTodo(todo.id)}\n      />\n    </div>\n  </li>\n);\n\nTodo.propTypes = {\n  todo: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n  }),\n  handleToggle: PropTypes.func,\n  deleteTodo: PropTypes.func,\n}.isRequired;\n\nexport default Todo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Todo from './Todo';\n\nclass TodoApp extends React.Component {\n  state = {\n    title: '',\n    id: 0,\n    completed: false,\n  }\n\n  currentTodoValue = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      title: value,\n    });\n  }\n\n  addTodo = (event) => {\n    event.preventDefault();\n\n    this.state.title.length > 0 && this.props.addTodo({\n      ...this.state,\n      id: Date.now(),\n    });\n\n    this.setState({\n      title: '',\n    });\n  }\n\n  render() {\n    const {\n      todos,\n      handleToggle,\n      handleCheckAll,\n      statusAllTodo,\n      deleteTodo,\n    } = this.props;\n\n    const { title } = this.state;\n\n    return (\n      <form onSubmit={this.addTodo}>\n        <header className=\"header\">\n          <h1>todos</h1>\n\n          <input\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            value={title}\n            onChange={this.currentTodoValue}\n          />\n        </header>\n\n        <section className=\"main\">\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            checked={statusAllTodo}\n            onChange={() => handleCheckAll(statusAllTodo)}\n          />\n          {/* eslint-disable-next-line */}\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n          <ul className=\"todo-list\">\n            {todos.map(todo => (\n              <Todo\n                key={todo.id}\n                todo={todo}\n                handleToggle={handleToggle}\n                deleteTodo={deleteTodo}\n              />\n            ))}\n          </ul>\n        </section>\n      </form>\n    );\n  }\n}\n\nTodoApp.propTypes = {\n  addTodo: PropTypes.func,\n  todos: PropTypes.arrayOf(PropTypes.object),\n  handleToggle: PropTypes.func,\n  handleCheckAll: PropTypes.func,\n  statusAllTodo: PropTypes.func,\n  deleteTodo: PropTypes.func,\n}.isRequired;\n\nexport default TodoApp;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst FilterBy = ({\n  sortFieldTodo, todos, sortField, clearCompleted,\n}) => (\n\n  <footer className=\"footer\" style={{ display: 'block' }}>\n    <span className=\"todo-count\">\n      {(todos.filter(todo => todo.completed === false)).length}\n        items left\n    </span>\n\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          className={(sortField === 'All') ? 'selected' : ''}\n          onClick={() => sortFieldTodo('All')}\n        >\n          All\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/active\"\n          onClick={() => sortFieldTodo('Active')}\n          className={(sortField === 'Active') ? 'selected' : ''}\n        >\n          Active\n        </a>\n      </li>\n\n      <li>\n        <a\n          href=\"#/completed\"\n          onClick={() => sortFieldTodo('Completed')}\n          className={(sortField === 'Completed') ? 'selected' : ''}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n\n    <button\n      type=\"button\"\n      className=\"clear-completed\"\n      style={{ display: 'block' }}\n      onClick={clearCompleted}\n    >\n      Clear completed\n    </button>\n  </footer>\n);\n\nFilterBy.propTypes = {\n  sortFieldTodo: PropTypes.string,\n  todos: PropTypes.arrayOf(PropTypes.object),\n  sortField: PropTypes.func,\n  clearCompleted: PropTypes.func,\n}.isRequired;\n\nexport default FilterBy;\n","import React from 'react';\nimport TodoApp from './TodoApp';\nimport FilterBy from './FilterBy';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    todosFiltered: [],\n    sortField: 'All',\n    statusAllTodo: false,\n  }\n\n  addTodo = (todo) => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos, todo],\n    }));\n    this.sortFieldTodo(this.state.sortField);\n  }\n\n  handleToggle = (id) => {\n    this.setState((prevstate) => {\n      const toggledTodos = prevstate.todos.map((todo) => {\n        if (todo.id !== id) {\n          return todo;\n        }\n\n        return {\n          ...todo,\n          completed: !todo.completed,\n        };\n      });\n\n      return {\n        todos: toggledTodos,\n      };\n    });\n    this.sortFieldTodo(this.state.sortField);\n\n    this.setState(prevstate => ({\n      statusAllTodo: (prevstate.todos.every(\n        todo => todo.completed\n      )) && true,\n    }));\n  }\n\n  handleCheckAll = (statusAllTodo) => {\n    (statusAllTodo !== true)\n      ? this.setState((prevState) => {\n        const completeAll = prevState.todos.map(todo => ({\n          ...todo,\n          completed: true,\n        }));\n\n        return {\n          todos: completeAll,\n          statusAllTodo: true,\n        };\n      })\n      : this.setState((prevstate) => {\n        const deleteAll = prevstate.todos.map(todo => ({\n          ...todo,\n          completed: false,\n        }));\n\n        return {\n          todos: deleteAll,\n          statusAllTodo: false,\n        };\n      });\n    this.sortFieldTodo(this.state.sortField);\n  }\n\n  sortFieldTodo = (value) => {\n    this.setState((prevstate) => {\n      switch (value) {\n        case 'Active':\n          return {\n            todosFiltered: prevstate.todos.filter(\n              todo => !todo.completed\n            ),\n            sortField: 'Active',\n          };\n        case 'Completed':\n          return {\n            todosFiltered: prevstate.todos.filter(\n              todo => todo.completed\n            ),\n            sortField: 'Completed',\n          };\n\n        case 'All':\n          return {\n            todosFiltered: prevstate.todos,\n            sortField: 'All',\n          };\n\n        default:\n          return {};\n      }\n    });\n  }\n\n  deleteTodo = (id) => {\n    this.setState(prevstate => ({\n      todos: prevstate.todos.filter(todo => todo.id !== id),\n    }));\n\n    this.sortFieldTodo(this.state.sortField);\n  }\n\n  clearCompleted = () => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => !todo.completed),\n    }));\n\n    this.sortFieldTodo(this.state.sortField);\n  }\n\n  render() {\n    const {\n      todos, sortField, statusAllTodo, todosFiltered,\n    } = this.state;\n\n    const visibleTodos = (sortField === 'All')\n      ? todos\n      : todosFiltered;\n\n    return (\n      <section className=\"todoapp\">\n        <TodoApp\n          todos={visibleTodos}\n          addTodo={this.addTodo}\n          handleToggle={this.handleToggle}\n          handleCheckAll={this.handleCheckAll}\n          statusAllTodo={statusAllTodo}\n          deleteTodo={this.deleteTodo}\n        />\n        <FilterBy\n          todos={todos}\n          sortFieldTodo={this.sortFieldTodo}\n          sortField={sortField}\n          clearCompleted={this.clearCompleted}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}